name: Deploy Spring Boot to EC2 with Docker

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'
      - 'Dockerfile'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/baekgwa-server:latest

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/baekgwa-server:latest
            docker stop baekgwa-server || true
            docker rm baekgwa-server || true

            docker run -d --name baekgwa-server \
              --restart always \
              --network baekgwa-network \
              -e RDBMS_URL=${{ secrets.RDBMS_URL }} \
              -e RDBMS_USERNAME=${{ secrets.RDBMS_USERNAME }} \
              -e RDBMS_PASSWORD=${{ secrets.RDBMS_PASSWORD }} \
              -e FRONTEND_URL=${{ secrets.FRONTEND_URL }} \
              -e LOGIN_ID=${{ secrets.LOGIN_ID }} \
              -e LOGIN_PASSWORD=${{ secrets.LOGIN_PASSWORD }} \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              -e JWT_TOKEN_EXPIRATION=${{ secrets.JWT_TOKEN_EXPIRATION }} \
              -p 8080:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/baekgwa-server:latest

            docker image prune -af
